@model ShopMate.Application.ShoppingLists.Create.Model
@{
    ViewData["Title"] = "Create";
    SelectList ProductSelectList = new SelectList(Model.Products, "Key", "Value");
    SelectList UnitSizeSelectList = new SelectList(Model.UnitSizes, "Key", "Value");

}

<h1>Create</h1>

<h4>ShoppingList</h4>
<hr />
<div class="row">
    <div class="col-md-6">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Title" class="control-label"></label>
                <input asp-for="Title" class="form-control" />
                <span asp-validation-for="Title" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="TripDate" class="control-label"></label>
                <input asp-for="TripDate" class="form-control" />
                <span asp-validation-for="TripDate" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Store" class="control-label"></label>
                <input asp-for="Store" class="form-control" />
                <span asp-validation-for="Store" class="text-danger"></span>
            </div>
                        
            <table id="ShoppingListItems">
                
            </table>
            <button type="button" onclick="AddItem()" class="btn btn-success">Add Item</button>

            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

<script>
        var itemIndex = 0;

    function AddItem() {
        $.ajax({
            type: "GET",
            url: "AddNewItem?index=" + itemIndex,
            success: function (response) {
                itemIndex++;
                $("#ShoppingListItems").append(response);
            },
            error: function (response) { alert("There was an unexpected error trying to add a new item.") }
        })
        }

        function OnProductChanged(id) {
            var productSelect = document.querySelector("#ProductId-" + id);
            var unitSelect = document.querySelector("#UnitSizeId-" + id);
            unitSelect.value = productSelect.options[productSelect.selectedIndex].getAttribute("data-defaultunitsize");
        }
</script>
}
